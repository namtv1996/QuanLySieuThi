!function (t) { function i(t, i, e, n, a, o) { function l(t) { for (var i = new String(t), e = "", n = 0; n < i.length; n++) "," != i[n] && (e += i[n]); return e } i.GetById = function () { t.get("api/item/getbyid/" + a.id, null, function (e) { i.items = e.data, i.itemOption.Name = i.items.Name, i.itemOption.ItemID = i.items.ItemID, t.get("api/itemOption/getall", null, function (t) { i.filterList = t.data }, function () { }) }, function (t) { e.displayError(t.data) }) }, i.items = {}, i.kl = 0, i.dv = "kg", i.branch = [], i.stock = [], i.displayError = "none", i.displaySuccess = "block", i.check = function () { for (var t in i.checked = !0, i.filterList) { if (i.filterList[t].SKU === i.itemOption.SKU) { i.checked = !1, i.displayError = "block", i.displaySuccess = "none"; break } i.checked = !0, i.displayError = "none", i.displaySuccess = "block" } }, i.checked = !0, i.filterList = [], i.GetById(), $(document).ready(function () { $(window).keydown(function (t) { if (13 == t.keyCode) return t.preventDefault(), !1 }) }), i.getBranch = void t.get("api/branch/getall", null, function (t) { for (var e in i.branch = t.data, t.data) i.branch[e].ClosingQuantity = 0 }, function () { console.log("load itemCategory failed") }), i.calculateClosingQuantity = function () { for (var t in i.itemOption.ClosingQuantity = 0, i.branch) i.itemOption.ClosingQuantity += i.branch[t].ClosingQuantity }, i.itemOption = { Image1: "../../../Assets/admin/img/camera1.png", UnitConvertRate: 1, WholesalePrice: 0, PurchasePrice: 0, SalePrice: 0, UnitName: "", MinimumInventory: 0, MaximumInventory: 0, Status: !0, HomeFlag: !0, Weigh: 0 }, i.dv = "kg"; var u = !1; i.AddItemOption2 = function (t) { u = !0, i.AddItemOption(t) }, i.AddItemOption = function (a) { if (!0 === i.checked) if (1 == i.itemOption.NotificationInventory && Number(l(i.itemOption.MinimumInventory)) < Number(l(i.itemOption.MaximumInventory)) || 0 == i.itemOption.NotificationInventory) { for (var r in i.itemOption.Weigh = l(i.kl) + i.dv, null != i.itemOption.ClosingQuantity && (i.itemOption.ClosingQuantity = l(i.itemOption.ClosingQuantity)), "" != i.itemOption.UnitName && null != i.itemOption.UnitName && (i.itemOption.Name += " - " + i.itemOption.UnitName), i.listAttribute) null != i.listAttribute[r].AttributeID && (i.itemOption.Name += " - " + i.listAttribute[r].value); o.saveModel(a, "api/itemOption/createImg").then(function (a) { for (var o in i.listAttributeBind = [], i.listAttribute) null != i.listAttribute[o].AttributeID && (i.listAttributeBind[o] = {}, i.listAttributeBind[o].value = i.listAttribute[o].value, i.listAttributeBind[o].AttributeID = i.listAttribute[o].AttributeID, i.listAttributeBind[o].ItemOptionID = a.data.ID); for (var l in i.listAttributeBind.length > 0 ? t.post("api/attributedetail/create", i.listAttributeBind, function (t) { e.displaySuccess("Thêm mới thành công!") }) : e.displaySuccess("Thêm thành công"), i.branch) i.stock[l] = {}, i.stock[l].StockID = "00000000-0000-0000-0000-000000000000", i.stock[l].BranchID = i.branch[l].BranchID, i.stock[l].ItemOptionID = a.data.ID, i.stock[l].Quantity = i.branch[l].ClosingQuantity, i.stock[l].InitialInventory = i.branch[l].ClosingQuantity; t.post("api/stock/create", i.stock, function (t) { }), i.items.Quantity += 1, t.put("api/item/update", i.items, function (t) { u ? (n.go("itemOption_add"), i.itemOption.Name = i.items.Name, u = !1) : (n.go("items_view", { id: i.items.ItemID }), u = !1) }, function (t) { }) }, function (t) { e.displayError("Thêm mới không thành công.") }) } else e.displayWarning("Tồn tối đa phải lớn hơn tồn tối thiểu"); else e.displayWarning("Mã SKU đã tồn tại !!") }, i.getSKU = function () { t.get("api/itemOption/getSKU", null, function (t) { i.itemOption.SKU = t.data }, function () { console.log("load items failed") }) }, i.getSKU(), i.itemOption.NotificationInventory = !1, i.readOnly = "none", $("input.number")[2].style.backgroundColor = "#d2cece", $("input.number")[6].style.backgroundColor = "#d2cece", i.notificationInventory = function () { i.itemOption.NotificationInventory ? (i.readOnly = "visible", $("input.number")[2].style.backgroundColor = "#fbfbfb", $("input.number")[6].style.backgroundColor = "#fbfbfb") : (i.readOnly = "none", $("input.number")[2].style.backgroundColor = "#d2cece", $("input.number")[6].style.backgroundColor = "#d2cece") }, i.listAttribute = []; var r = 0; i.attribute = { display: "none", name: "", value: "", index: 0 }, i.listAttribute.push(i.attribute), i.addAttribute = function () { r++; var t = Number(i.listAttribute.length); i.listAttribute[t] = {}, i.listAttribute[t].index = r, i.listAttribute[t].display = "none", i.listAttribute[t].name = "", i.listAttribute[t].value = "" }, i.deleteAttribute = function (t) { for (var e in i.listAttribute) i.listAttribute[e].index == t && i.listAttribute.splice(e, 1) }, i.listAttributeView = [], i.getAllAttribute = function () { t.get("api/attribute/getAll", null, function (t) { i.listAttributeView = t.data }, function (t) { console.log("loadfail") }) }, i.getAllAttribute(), i.focusInput = function (e) { e.display = "block", "" != e.name && t.get("api/attribute/getByName?key=" + e.name, null, function (n) { null == n.data ? (i.dp1 = "display:block;height:40px;padding:10px;", i.listAttributeView = []) : i.dp1 = "display:none", t.get("api/attribute/search?key=" + e.name, null, function (t) { i.listAttributeView = t.data }) }) }, i.chooseAttribute = function (t, e) { e.AttributeID = t.AttributeID, e.name = t.Name, e.display = "none", i.dp1 = "display:none" }, i.searchAttribute = function (e) { "" != e ? t.get("api/attribute/getByName?key=" + e, null, function (n) { null == n.data ? (i.dp1 = "display:block;height:40px;padding:10px;", i.listAttributeView = []) : i.dp1 = "display:none", t.get("api/attribute/search?key=" + e, null, function (t) { i.listAttributeView = t.data }) }) : (i.dp1 = "display:none", i.getAllAttribute()) }, i.dp1 = "display:none;height:40px;padding:10px;", i.addNewAttribute = function (n) { i.attributeNew = {}, i.attributeNew.Name = n, i.attributeNew.Status = !0, t.post("api/attribute/create", i.attributeNew, function (t) { e.displaySuccess("Thêm mới thuộc tính " + t.data.Name), i.dp1 = "display:none" }) } } angular.module("tiktak.itemOption").controller("itemOptionAddController", i), i.$inject = ["apiService", "$scope", "notificationService", "$state", "$stateParams", "akFileUploaderService"] }();