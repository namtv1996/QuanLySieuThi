!function (t) { function e(t, e, n, i) { t.bc = { format: "CODE128A", lineColor: "#000000", width: 1, height: 35, background: "#dddddd", displayValue: !0, fontOptions: "", font: "monospace", textAlign: "center", textPosition: "top", textMargin: 1, fontSize: 12, background: "#ffffff", margin: 1, marginTop: -3, marginBottom: -10, marginLeft: 0, marginRight: 0, valid: function (t) { } }, t.listItems = [], t.listNew = [], t.items = {}, t.getItems = a, t.deleteItems = function (t, s) { i.confirm("Bạn có chắc muốn xóa?").then(function () { var i = { params: { id: t } }; e.del("api/itemOption/delete", i, function () { var t; t = s, e.get("api/item/getbyid/" + t, null, function (i) { if ((o = i.data).Quantity > 1) o.Quantity = o.Quantity - 1, e.put("api/item/update", o, function (t) { n.displaySuccess("Cập nhật thành công hàng hóa.") }, function (t) { n.displayError("Cập nhật không thành công.") }); else { var a = { params: { id: t } }; e.del("api/item/delete", a, function () { n.displaySuccess("Xóa thành công hàng hóa.") }, function () { n.displayError("Xóa hàng hóa không thành công") }) } }, function (t) { n.displayError(t.data) }), n.displaySuccess("Xóa Quy cách hàng hóa thành công"), a() }, function () { n.displayError("Xóa không thành công") }) }) }, t.detailItems = function () { var e = { templateUrl: "/app/components/itemOption/itemOptionViewDetail.html", title: "Thông tin " + t.items.Name, className: "test-class" }; i.customDialog(e) }, t.GetById = function (i) { e.get("api/itemOption/getbyid/" + i, null, function (e) { t.items = e.data }, function (t) { n.displayError(t.data) }) }, t.checkAll = function () { if (1 == t.setall) for (var e = 0; e <= t.listItems.length; e++) t.listItems[e].CheckBox = !0; else for (var e = 0; e <= t.listItems.length; e++) t.listItems[e].CheckBox = !1 }, t.InBarcode = function () { for (var e = 0, n = 0; n < t.listItems.length; n++) 1 == t.listItems[n].CheckBox && (t.listNew[e] = {}, t.listNew[e].BarcodeNew = t.listItems[n].Barcode, t.listNew[e].NameNew = t.listItems[n].Name, t.listNew[e].SalePriceNew = t.listItems[n].SalePrice, t.listNew[e].SKUNew = t.listItems[n].SKU, t.listNew[e].ClosingQuantityNew = t.listItems[n].ClosingQuantity, e++) }, t.exportFile = function () { for (var e = 0; e < t.listNew.length; e++) { document.getElementById("show").innerHTML = $(".test")[e].innerHTML; for (var n = 0; n < t.listNew[e].ClosingQuantityNew; n++) $("#code").clone().appendTo("#showIn") } t.PrintDiv(), $(".delete").remove() }, t.PrintDiv = function () { var t = document.getElementById("dvContents").innerHTML, e = document.createElement("iframe"); e.name = "frame1", e.style.position = "absolute", e.style.top = "-1000000px", document.body.appendChild(e); var n = e.contentWindow ? e.contentWindow : e.contentDocument.document ? e.contentDocument.document : e.contentDocument; return n.document.open(), n.document.write("<html><head><title>Tiktac.vn</title>"), n.document.write("</head><body>"), n.document.write(t), n.document.write("</body></html>"), n.document.close(), setTimeout(function () { window.frames.frame1.focus(), window.frames.frame1.print(), document.body.removeChild(e) }, 500), !1 }, t.close = function () { t.listNew = [] }, t.exportExcel = function () { var i = { params: { filter: t.keyword } }; e.get("api/itemOption/ExportXls", i, function (t) { (t.status = 200) && (window.location.href = t.data.Message) }, function (t) { n.displayError(t) }) }, t.account = {}, e.get("api/account/users", null, function (e) { t.account = e.data, t.getItems() }); var o = {}; function a() { e.get("api/itemOption/getListItemOptionByBranchID?BranchID=" + t.account.BranchID, null, function (e) { for (var i in 0 == e.data.length ? n.displayWarning("Không có bản ghi nào!!!") : n.displaySuccess("Có " + e.data.length + " bản ghi."), t.listItems = e.data, t.listItems) null == t.listItems[i].image1 && (t.listItems[i].image1 = "../../../Assets/admin/img/imgpsh_fullsize (3).png"); for (var i in t.listItems) null != t.listItems[i].UnitName && (t.listItems[i].Unit = t.listItems[i].UnitName, t.listItems[i].CheckBox = !1); for (var i in t.listItems) 1 == t.listItems[i].Status ? (t.listItems[i].tt = "Đang giao dịch", t.listItems[i].cs = "available") : (t.listItems[i].tt = "Ngừng giao dịch", t.listItems[i].cs = "not-available") }, function () { console.log("load items failed") }) } t.ten = "block", t.ma = "block", t.gia = "block", t.hienthi = function () { 1 == t.status1 ? t.ten = "none" : t.ten = "block", 1 == t.status2 ? t.gia = "none" : t.gia = "block", 1 == t.status3 ? t.ma = "none" : t.ma = "block" } } angular.module("tiktak.itemOption").controller("itemOptionListController", e), e.$inject = ["$scope", "apiService", "notificationService", "$ngBootbox"] }();